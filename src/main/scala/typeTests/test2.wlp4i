start BOF procedures EOF
BOF BOF
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID x
LPAREN (
params paramlist
paramlist dcl
dcl type ID
type INT
INT int
ID x
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr expr PLUS term
expr term
term factor
factor ID
ID x
PLUS +
term factor
factor NUM
NUM 4
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID y
LPAREN (
params paramlist
paramlist dcl
dcl type ID
type INT
INT int
ID z
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr expr PLUS term
expr term
term factor
factor ID
ID z
PLUS +
term factor
factor ID LPAREN arglist RPAREN
ID x
LPAREN (
arglist expr
expr term
term factor
factor ID
ID z
RPAREN )
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo1
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo2
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo3
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo4
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo5
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo6
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo7
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo8
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID foo9
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID x
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID y
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term term STAR factor
term factor
factor ID
ID x
STAR *
factor ID
ID y
SEMI ;
RBRACE }
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT
INT int
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NULL SEMI
dcls dcls dcl BECOMES NULL SEMI
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID c
BECOMES =
NUM 0
SEMI ;
dcl type ID
type INT STAR
INT int
STAR *
ID d
BECOMES =
NULL NULL
SEMI ;
dcl type ID
type INT STAR
INT int
STAR *
ID C
BECOMES =
NULL NULL
SEMI ;
dcl type ID
type INT
INT int
ID D
BECOMES =
NUM 0
SEMI ;
dcl type ID
type INT
INT int
ID q
BECOMES =
NUM 0
SEMI ;
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID q
BECOMES =
expr expr MINUS term
expr expr PLUS term
expr term
term factor
factor ID
ID D
PLUS +
term factor
factor ID
ID c
MINUS -
term term STAR factor
term factor
factor ID LPAREN arglist RPAREN
ID x
LPAREN (
arglist expr
expr term
term factor
factor ID
ID a
RPAREN )
STAR *
factor ID LPAREN arglist RPAREN
ID y
LPAREN (
arglist expr
expr term
term factor
factor ID
ID b
RPAREN )
SEMI ;
RETURN return
expr term
term factor
factor ID
ID q
SEMI ;
RBRACE }
EOF EOF
